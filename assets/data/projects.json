[
    {
        "title": "Senior Connect",
        "subtitle": "Electronic Health Record System",
        "description": "Developed a full-stack Django/React/PostgreSQL web app to digitize and centralize patient records, ensuring consistent, accurate data across departments. Implements role-based access control, PHI encryption, and 2FA for secure information handling. Features include member management, billing integration, monthly automated snapshots, and bulk operations to streamline staff workflows and reduce errors. ",
        "image": "assets/images/projects/seniorconnect.jpg",
        "github": "https://github.com/johnnyj2608/SeniorConnect",
        "demo": "",
        "subpage": "",
        "visible": true
    },
    {
        "title": "Lunar Birthdays",
        "subtitle": "Birthday Reminder & Converter",
        "description": "Created a SwiftUI iOS app to save birthday profiles in core data and count down until the next. It will notify users of upcoming birthdays. The main idea is to help ABC's (American-born Chinese) to help remember their family's birthdays since Lunar birthdays are never on the same day on Gregorian calendars.",
        "image": "assets/images/projects/lunarbirthdays.jpg",
        "github": "https://github.com/johnnyj2608/LunarBirthdays",
        "demo": "yANz3VMv6_s",
        "subpage": "/privacy",
        "visible": true
    },
    {
        "title": "Claimbot",
        "subtitle": "Automate Insurance Claim Submission",
        "description": "Developed a Python script with CTkinter and Selenium to automate submitting health insurance claims on Office Ally. It uses an Excel template to pull account and member information to autofill claim forms. By selecting which member list and range of dates, it will automatically submit and download each claim and record the total value. This program has increased efficiency of submitting claims by 90% for 500 clients biweekly.",
        "image": "assets/images/projects/claimbot.jpg",
        "github": "https://github.com/johnnyj2608/Claimbot",
        "demo": "kw0KtUPqezA",
        "visible": true
    },
    {
        "title": "Order Up 2",
        "subtitle": "Kitchen Order Management",
        "description": "Developed a full-stack web application with Node.js enables remote food ordering for social adult day cares, allowing kitchen staff to set daily menus and track orders effortlessly. It features self-ordering capabilities with schedule-aware menus managed by the staff. It saves the kitchen staff 30 minutes each day from manually asking every individual for their meal preference. This version utilizes PostgreSQL to save menu, member, and order data.",
        "image": "assets/images/projects/orderup2.jpg",
        "github": "https://github.com/johnnyj2608/OrderUp2",
        "demo": "zdFVZWnaBac",
        "visible": true
    },
    {
        "title": "Timesheet",
        "subtitle": "Excel Modification Automation",
        "description": "Developed a Python script with a GUI to automate the timesheet creation process. For the start of every new month, over 500 unique timesheets are neededed. Achieved 45 hours of monthly time-savings by constructing this script. Timesheets are curated based on service days, month, and year.",
        "image": "assets/images/projects/timesheet.jpg",
        "github": "https://github.com/johnnyj2608/Timesheet",
        "demo": "qL-lIXtQlJQ",
        "visible": false
    },
    {
        "title": "Order Up (Old)",
        "subtitle": "Remote Food Ordering",
        "description": "Developed a full-stack web application with Node.js enables remote food ordering for social adult day cares, allowing kitchen staff to set daily menus and track orders effortlessly. It features self-ordering capabilities with schedule-aware menus managed by the staff. It saves the kitchen staff 30 minutes each day from manually asking every individual for their meal preference.",
        "image": "assets/images/projects/orderup.jpg",
        "github": "https://github.com/johnnyj2608/OrderUp",
        "demo": "7OSRugRqBtQ",
        "visible": false
    },
    {
        "title": "Loot Council",
        "subtitle": "Web Scraper & Reward Allocator",
        "description": "Developed a Python script to construct reward assignments for World of Warcraft guilds. It utilizes web scraping techniques and GraphQL to extract data to be used in the criterion. Environment variables are used to safeguard API keys. GitHub Actions will automatically run the script once a week.",
        "image": "assets/images/projects/lootcouncil.jpg",
        "github": "https://github.com/johnnyj2608/LootCouncil",
        "demo": "STeGI4txP7M",
        "visible": false
    },
    {
        "title": "Restaurant POS",
        "subtitle": "Point-of-Sale System",
        "description": "Created a Java Swing GUI, Point-of-Sale system that allows self-service for food ordering during the pandemic. It deploys PostgreSQL to store every menu item and dynamically retrieves the correct items based on the selected category. It also counts the frequency of each item so restocking is easier.",
        "image": "assets/images/projects/newgarden.jpg",
        "github": "https://github.com/johnnyj2608/RestaurantPOS",
        "demo": "aZanP8LEd20",
        "visible": false
    },
    {
        "title": "Romantic Hut",
        "subtitle": "Local Business Website",
        "description": "Designed a Bootstrap website to showcase the services of a party hall. By filling out the embedded Google Form, you can receive an immediate response on the venue's availability via Twilio. When submitted, Apps Script will look for schedule conflicts in the Google Sheet that hold all the reservations.",
        "image": "assets/images/projects/romantichut.jpg",
        "github": "https://github.com/johnnyj2608/RomanticHut",
        "demo": "https://www.romantichutparty.com/",
        "visible": false
    }
]
  